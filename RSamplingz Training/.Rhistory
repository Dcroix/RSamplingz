par(mfrow=c(1,2))
g <- ggplot(data, aes(mpg, hp))
g + geom_point(color = "steelblue") + geom_smooth(method = "loess")
rm(list=ls())
data <- mtcars
par(mfrow=c(1,2))
g <- ggplot(data, aes(mpg, hp))
g + geom_point()
g + geom_point() + geom_smooth(method = "loes")
g + geom_point() + geom_smooth(method = "loess")
g + geom_point() + geom_smooth(method = "lm")
q()
#Dr Tin Amada
library(xlsx)
data <- read.xlsx("Tamada.xlsx", sheetIndex = "Sheet1")
head(data)
names(data)
names(data) <- c("IA", "NAT", "TTI")
head(data)
str(data)
levels(IA)
levels(data$IA)
?grep
grep("REACTIVE ", data$IA)
data$IA[39,]
data$IA[39,]
data$IA[,39]
data$IA[1,]
data[39,]
data[39,1]
data[39,1] <- "REACTIVE"
grep("REACTIVE ", data$IA)
data[243,1] <- "REACTIVE"
data[304,1] <- "REACTIVE"
data[1182,1] <- "REACTIVE"
data[4010,1] <- "REACTIVE"
grep("REACTIVE ", data$IA)
levels(data$IA)
grep("NON-REACTIVE ", data$IA)
grep("NON-REACTIVE", data$IA)
grep("NONREACTIVE", data$IA)
sub <- grep("NON-REACTIVE", data$IA)
data$IA[sub,]
data$IA[,sub]
data[sub,]
data[sub,]$IA
data[sub,]$IA <- "NONREACTIVE"
levels(data$IA)
table(data$IA)
grep("CANâ€™T DONATE", data$IA)
data[647,1] <- "CAN'T DONATE"
data[647,1] <- "CANNOT DONATE"
data[647,1] <- "CANNOT DONATE"
data[647,1]
data[669,1]
data[669,1] <- "CANNOT DONATE"
data[669,1] <- "CANNOT.DONATE"
data[647,1]
rm(list=ls())
data <- read.xlsx("Tamada.xlsx", sheetIndex = "Sheet1")
names(data)
names(data) <- c("IA", "NAT", "TTI")
grep("REACTIVE ", data$IA)
data[39,1] <- "REACTIVE"
data[243,1] <- "REACTIVE"
data[304,1] <- "REACTIVE"
data[1182,1] <- "REACTIVE"
data[4010,1] <- "REACTIVE"
sub <- grep("NON-REACTIVE", data$IA)
data[sub,]$IA <- "NONREACTIVE"
levels(data$IA)
data$IA <- factor(data$IA)
levels(data$IA)
data$IA <- factor(data$IA, levels = c("CANâ€™T DONATE", "NONREACTIVE", "QNS", "REACTIVE"), labels = c("CANT DONATE", "NONREACTIVE", "QNS", "REACTIVE")
)
levels(data$IA)
table(data$IA)
profile <- function(data, label){
library(plyr)
x <- count(data)
x$perc <- round(x$freq /sum(x$freq), digits =4)*100
names(x)[1] <- label
names(x)[2] <- "Freq."
names(x)[3] <- "Prct."
print(x, row.names = FALSE)
}
profile(data$IA, "Profile on Immuno-Assay")
library(ggplot2)
g <- ggplot(data, aes(IA))
g + geom_bar(color = "steelblue")
g + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = percent)
g + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = percent)
g + geom_bar(aes(y = (..count..)/sum(..count..)))
g + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(formatter = 'percent')
g + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent)
g + geom_bar(aes(y = (..count..)/sum(..count..), color = "darkorchid")) + scale_y_continuous(labels = scales::percent)
g + geom_bar(color = "darkorchid", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent)
g + geom_bar(fill = "darkorchid", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent)
g + geom_bar(fill = "steelblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent)
g + geom_bar(fill = "steelblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("Immuno-Assay Results") + ylab("Percentage") + ggtitle("Profile on Immuno-Assay Results")
g + geom_bar(fill = "steelblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("Immuno-Assay Results") + ylab("Percentage") + ggtitle("Profile on Immuno-Assay Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
dev.copy(png, file = "Profile on Immuno-Assay Results.png")
dev.off()
IA <- profile(data$IA, "Profile on Immuno-Assay")
write.xlsx(IA, IAresults.xlsx, sheetName = "Sheet1")
write.xlsx(IA, "IAresults.xlsx", sheetName = "Sheet1")
table(data$NAT)
levels(data$NAT)
grep("REACTIVE ", data$IA)
grep("NON-REACTIVE", data$IA)
grep("REACTIVE ", data$NAT)
reps <- grep("REACTIVE ", data$NAT)
data[reps,]$NAT
data[reps,]$NAT <- "REACTIVE"
table(data$NAT)
chnge <- grep("NON-REACTIVE ", data$NAT)
chnge
chnge <- grep("NON-REACTIVE", data$NAT)
length(chnge)
data[chnge,]$NAT <- "NONREACTIVE"
table(data$NAT)
data$NAT <- factor(data$NAT)
levels(data$NAT)
table(data$NAT)
profile(data$NAT, "Profile on NAT")
p <- profile(data$NAT, "Profile on NAT")
write.xlsx(p, file = "Profile on NAT.xlsx", sheetName = "Sheet1")
g <- ggplot(data, aes(NAT))
g + geom_bar(fill = "deeppink", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
dev.copy(png, file = "Profile on NAT results.png")
dev.off()
head(data)
subs <- data[data$IA == "NONREACTIVE",]
subs
table(subs$IA)
subss <- data[data$NAT == "NONREACTIVE",]
table(subss$NAT)
test <- rep(1, 4930)
test
subs <- cbind(subs, test)
test <- data.frame(test)
subs <- cbind(subs, test)
is.na(data$IA)
table(is.na(data$IA))
table(is.na(subs$IA))
data[is.na(subs$IA),]
test <- rep(1, 4933)
subs <- cbind(subs, test)
head(subs)
table(is.na(subss))
table(is.na(subss$NAT))
nrow(subss$NAT)
nrows(subss$NAT)
length(subss$NAT)
test <- rep(2, 5239)
subss <- cbind(subss, test)
head(subss)
subset <- rbind(subs, subss)
head(subset)
table(subset$IA)
table(subset$NAT)
table(subset$IA[test==1])
table(subset$IA[test==1],)
table(subset$IA[test==1,])
table(subset$IA[test=="1"])
table(subset$IA[test=="1",])
table(subset$IA[,test=="1"])
table(subset$IA[subset$test=="1",])
table(subset$IA[subset$test=="1"])
table(subset$NAT[subset$test=="2"])
str(subset)
subset$test <- as.character(subset$test)
str(subset)
subset$test <- factor(subset$test)
str(subset)
levels(subset$test)
subset$test <- factor(subset$test, levels = c("1", "2"), labels = c("IA NONREACTIVE", "NAT NONREACTIVE"))
table(subset$test)
grep(is.na(subset$IA))
grep(is.na(subset$IA))
grep(is.na(subset))
grepl(is.na(subset))
grepl(is.na(subset$IA))
pracs <- is.na(subset$IA)
pracs
table(pracs)
pracs <- is.na(subs$IA)
table(pracs)
grep(is.na[subs$IA])
which(is.na[subs$IA])
which(is.na(subs$IA))
subs$IA[3605]
subs[3605,]
subs[3606,]
subs[3608,]
subs[3605,] <- NULL
eee <- subs[-c(3605,3606,3607)]
which(is.na(subs$IA))
which(is.na(eee$IA))
eee <- subs[c(-3605,-3606,-3607),]
which(is.na(eee$IA))
table(eee)
str(eee)
table(eee$IA)
subs <- subs[c(-3605,-3606,-3607),]
table(subss$NAT)
which(is.na(subss))
which(is.na(subss$NAT))
NA <- which(is.na(subss$NAT))
Nan <- which(is.na(subss$NAT))
Nan
subss <- subss[-Nan,]
table(subss$NAT)
which(is.na(subss$NAT))
table(subs$IA)
test <- rep(1, 4930)
subs <- cbind(subs, test)
table(subss$NAT)
test <- rep(2, 4910)
subss <- cbind(subss, test)
subset <- rbind(subs, subss)
table(subset$IA[subset$test=="1"])
table(subset$NAT[subset$test=="2"])
subset$test <- as.character(subset$test)
subset$test <- factor(subset$test)
subset$test <- factor(subset$test, levels = c("1", "2"), labels = c("IA NONREACTIVE", "NAT NONREACTIVE"))
table(subset$test)
profile(subset$test, "NONREACTIVE Results for IA and NAT")
h <- profile(subset$test, "NONREACTIVE Results for IA and NAT")
write.xlsx(h, file ="NONREACTIVE Results for IA and NAT.xlsx", sheetName = "Sheet1")
g <- ggplot(subset, aes(test))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
table(subset$test)
g <- ggplot(subset, aes(test))
g + geom_bar()
barplot(subset$test)
str(subset)
subset[,6]
subset[,4]
subset[,5]
subset[,5] <- NULL
g <- ggplot(subset, aes(test))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5)) + ylim(60)
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim(60,))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim(60,2))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim(.60,2))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim(90,2))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim = 90)
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim = c(90,2)
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5) + ylim(0,80))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent, limits=c(0,.7)) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent, limits=c(0,.6)) + xlab("NAT Results") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
g + geom_bar(fill = "deepskyblue", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent, limits=c(0,.6)) + xlab("NONREACTIVE Results for IA and NAT") + ylab("Percentage") + ggtitle("Profile on NAT Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
dev.copy(png, file = "NONREACTIVE Results for IA and NAT.png")
dev.off()
q()
library(xlsx)
data <- read.xlsx("Tamada.xlsx", sheetIndex = "Sheet1")
names(data)
names(data) <- c("IA", "NAT", "TTI")
grep("REACTIVE ", data$IA)
data[39,1] <- "REACTIVE"
data[243,1] <- "REACTIVE"
data[304,1] <- "REACTIVE"
data[1182,1] <- "REACTIVE"
data[4010,1] <- "REACTIVE"
sub <- grep("NON-REACTIVE", data$IA)
data[sub,]$IA <- "NONREACTIVE"
grep("CANâ€™T DONATE", data$IA)
data$IA <- factor(data$IA)
levels(data$IA)
data$IA <- factor(data$IA, levels = c("CANâ€™T DONATE", "NONREACTIVE", "QNS", "REACTIVE"), labels = c("CANT DONATE", "NONREACTIVE", "QNS", "REACTIVE"))
reps <- grep("REACTIVE ", data$NAT)
data[reps,]$NAT <- "REACTIVE"
chnge <- grep("NON-REACTIVE", data$NAT)
data[chnge,]$NAT <- "NONREACTIVE"
data$NAT <- factor(data$NAT)
subs <- data[data$IA == "NONREACTIVE",]
subs <- subs[c(-3605,-3606,-3607),]
subss <- data[data$NAT == "NONREACTIVE",]
subss <- subss[-Nan,]
test <- rep(1, 4930)
subs <- cbind(subs, test)
test <- rep(2, 4910)
subss <- cbind(subss, test)
nrow(subss)
Nan <- which(is.na(subss$NAT))
subss <- subss[-Nan,]
test <- rep(1, 4930)
subs <- cbind(subs, test)
test <- rep(2, 4910)
subss <- cbind(subss, test)
subset <- rbind(subs, subss)
nrow(subss)
nrow(subs)
head(subs)
head(subss)
subs[,5]
subs[,5] <- NULL
subset <- rbind(subs, subss)
table(subss)
table(subss$NAT)
head(data)
table(data$TTI)
table(data$TTI[data$NAT == "REACTIVE"])
profile <- function(data, label){
library(plyr)
x <- count(data)
x$perc <- round(x$freq /sum(x$freq), digits =4)*100
names(x)[1] <- label
names(x)[2] <- "Freq."
names(x)[3] <- "Prct."
print(x, row.names = FALSE)
}
profile(data$TTI, "Profile of TTI cases for Reactive NAT")
u <- profile(data$TTI, "Profile of TTI cases for Reactive NAT")
write.xlsx(u, file = "Profile of TTI cases for Reactive NAT.xlsx", sheetName = "Sheet1")
library(ggplot2)
g <- ggplot(data, aes(TTI))
g + geom_bar(fill = "green", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent, limits=c(0,.6)) + xlab("Profile of TTI for REACTIVE NAT") + ylab("Percentage") + ggtitle("Profile on TTI Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
g + geom_bar(fill = "green", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("Profile of TTI for REACTIVE NAT") + ylab("Percentage") + ggtitle("Profile on TTI Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
count(data$TTI)
count(data$TTI, na.rm=1)
Nana <- which(is.na(data$TTI))
data$test <- data$test[-Nana,]
table(data$test)
data$test
rm(list=ls())
rm(list=ls())
library(xlsx)
data <- read.xlsx("Tamada.xlsx", sheetIndex = "Sheet1")
names(data)
names(data) <- c("IA", "NAT", "TTI")
grep("REACTIVE ", data$IA)
data[39,1] <- "REACTIVE"
data[243,1] <- "REACTIVE"
data[304,1] <- "REACTIVE"
data[1182,1] <- "REACTIVE"
data[4010,1] <- "REACTIVE"
sub <- grep("NON-REACTIVE", data$IA)
data[sub,]$IA <- "NONREACTIVE"
grep("CANâ€™T DONATE", data$IA)
data$IA <- factor(data$IA)
levels(data$IA)
data$IA <- factor(data$IA, levels = c("CANâ€™T DONATE", "NONREACTIVE", "QNS", "REACTIVE"), labels = c("CANT DONATE", "NONREACTIVE", "QNS", "REACTIVE"))
data$TTI
Nana <- which(is.na(data$TTI))
Nana
data$TTI <- data$TTI[-Nana,]
data$TTI
Nana
TTIdata <- data$TTI[-Nana,]
TTIdata <- data[-Nana,]
table(data$TTI)
TTIdata
g <- ggplot(TTIdata, aes(TTI))
g + geom_bar(fill = "green", aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels = scales::percent) + xlab("Profile of TTI REACTIVE to NAT") + ylab("Percentage") + ggtitle("Profile on TTI Results") + theme_bw(base_family = "Times") + theme(plot.title = element_text(hjust = 0.5))
profile(TTIdata$TTI, "Profile of TTI cases for Reactive NAT")
profile(TTIdata$TTI, "Profile of TTI cases for Reactive NAT")
head(TTIdata)
profile <- function(data, label){
library(plyr)
x <- count(data)
x$perc <- round(x$freq /sum(x$freq), digits =4)*100
names(x)[1] <- label
names(x)[2] <- "Freq."
names(x)[3] <- "Prct."
print(x, row.names = FALSE)
}
profile(TTIdata$TTI, "Profile of TTI cases for Reactive NAT")
u <- profile(TTIdata$TTI, "Profile of TTI cases for Reactive NAT")
write.xlsx(u, file = "Profile of TTI cases for Reactive NAT.xlsx", sheetName = "Sheet1")
dev.copy(png, file = "Profile of TTI cases for Reactive NAT.png")
dev.off()
q()
q()
library(RSamplingz)
packageDescription("RSamplingz")
?Yamane
?Yamane95
?Yamane99
packageDescription("RSamplingz")
?SRRequal95
?SRRequal99
?SRRprop95
?SRRprop99
?systematic
?Cochran
?CochranMod
?Smean
?sampleElements
?sysElements
?Cochran
setwd("C:/R Files/Practice/RSamplingz Training")
list.files(pattern = "*.csv")
?Yamane
##Computing for sample size using Yamane
Yamane(500, 0.05)
?Yamane95
?Yamane99
##Computing for sample size using Yamane
Yamane(500, 0.05)
Yamane95(700)
Yamane99(700)
?Cochran
Cochran(1.96, 0.8, 0.15)
Cochran(1.96, 0.7, 0.15)
Cochran(1.96, 0.7, 0.3)
Cochran(1.96, 0.7, 0.4)
Cochran(1.96, 0., 0.4)
Cochran(1.96, 0.6, 0.4)
Cochran(1.96, 0.6, 0.2)
Cochran(1.96, 0.7, 0.2)
Cochran(1.96, 0.7, 0.05)
Cochran(1.96, 0.7, 0.08)
CochranMod(127, 500)
SRRequal95(500, 2)
SRRequal99(500, 2)
SRRprop95(700, 3)
SRRprop95(500, 3)
?SRRprop95
SRRprop95(300, 2)
##Computing for sample size using Stratified Random Sampling with Proportional Alloc.
SRRprop95(570, 145)
SRRprop95(570, 220)
SRRprop95(570, 205)
?SRRprop99
?systematic
?Smean
##Computing for sample size using variance and mean
Smean(1.96, 15, 6)
##Computing for sample size using variance and mean
Smean(1.96, 27.2, 4.8)
list.file(patter = "*.csv")
list.files(patter = "*.csv")
data <- read.csv("CochranCase1.csv")
head(data)
##Using RSamplingz functions on data frame
## Read data in .CSV (comma separated value file)
data <- read.csv("CochranCase1.csv")
setwd("C:/R Files/Practice/RSamplingz Training")
##Using RSamplingz functions on data frame
## Make sure you are working on the RIGHT directory, the one presented below
## is an example only, the directory where you files are stored maybe different
## so have it specified.
setwd("C:/R Files/Practice/RSamplingz Training")
## Read data in .CSV (comma separated value file)
data <- read.csv("CochranCase1.csv")
##Check out the first six rows of the dataset
head(data)
?Cochran
##Using RSamplingz functions on data frame
## Make sure you are working on the RIGHT directory, the one presented below
## is an example only, the directory where you files are stored maybe different
## so have it specified.
setwd("C:/R Files/Practice/RSamplingz Training")
## Read data in .CSV (comma separated value file)
data <- read.csv("CochranCase1.csv")
##Check out the first six rows of the dataset
head(data)
## Compute Sample using Cochran's Formula on the proportions given in the data set
Cochran(1.96, data$Proportions, 0.05)
##Using RSamplingz functions on data frame
## Make sure you are working on the RIGHT directory, the one presented below
## is an example only, the directory where you files are stored maybe different
## so have it specified.
setwd("C:/R Files/Practice/RSamplingz Training")
## Read data in .CSV (comma separated value file)
data <- read.csv("CochranCase1.csv")
##Check out the first six rows of the dataset
head(data)
## Compute Sample using Cochran's Formula on the proportions given in the data set
Cochran(1.96, data$Proportions, 0.05)
## Compute Sample using Cochran's Formula on the proportions given in the data set
## and attaching results to vector "Sample"
Sample <- Cochran(1.96, data$Proportions, 0.05)
## Binding Sample as a new column to existing data set
data <- cbind(data, Sample)
## Compute Sample using Cochran's Formula on the proportions given in the data set
## and attaching results to vector "Sample"
Sample <- Cochran(1.96, data$Proportions, 0.05)
## Binding Sample as a new column to existing data set
data <- cbind(data, Sample)
## Viewing the first six rows of the new data
head(data)
head(data)
data <- NULL
##Using RSamplingz functions on data frame
## Make sure you are working on the RIGHT directory, the one presented below
## is an example only, the directory where you files are stored maybe different
## so have it specified.
setwd("C:/R Files/Practice/RSamplingz Training")
## Read data in .CSV (comma separated value file)
data <- read.csv("CochranCase1.csv")
##Check out the first six rows of the dataset
head(data)
## Compute Sample using Cochran's Formula on the proportions given in the data set
## and attaching results to vector "Sample"
Sample <- Cochran(1.96, data$Proportions, 0.05)
## Binding Sample as a new column to existing data set
data <- cbind(data, Sample)
## Viewing the first six rows of the new data
head(data)
?sampleElements
sampleElements("NamesList2.xlsx", "Sheet1", 100, 15, 1)
setwd("C:/R Files/Practice/RSamplingz Training")
sampleElements("NamesList2.xlsx", "Sheet1", 100, 15, 1)
?sysElements
setwd("C:/R Files/Practice/RSamplingz Training")
sysElements("NamesList.xlsx", "Names", 150, 15, 1)
q()
